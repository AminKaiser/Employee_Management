
package Salary;

import Database_Connection.DBConnection;
import Desig_info.Designation_info;
import com.lowagie.text.BadElementException;
import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.Element;
import com.lowagie.text.Font;
import com.lowagie.text.PageSize;
import com.lowagie.text.Paragraph;
import com.lowagie.text.Phrase;
import com.lowagie.text.Rectangle;
import com.lowagie.text.pdf.PdfContentByte;
import com.lowagie.text.pdf.PdfPCell;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.HeadlessException;
import java.io.*;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.Doc;
import javax.print.DocFlavor;
import javax.print.PrintException;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.print.SimpleDoc;
import javax.swing.JOptionPane;


public class Emp_Salary extends javax.swing.JFrame {

    Connection con;
    
    
    
    PreparedStatement prepStmt = null;
    ResultSet res =null;
    
    SimpleDateFormat df=new SimpleDateFormat("dd-MM-yyyy");
    
    
    String SalDate="";
    java.util.Date now = new java.util.Date();
    
    
    
    public Emp_Salary() {
        initComponents();
        
        jDateChooser1.setDate(now);
        
        try {
            
            
            
            con=DBConnection.DBConnection();
            
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Designation_info.class.getName()).log(Level.SEVERE, null, ex);
        } 
        try{
            String sqlSrch = "Select distinct(id) AS ID from employee_info";
            prepStmt=con.prepareStatement(sqlSrch);
            res=prepStmt.executeQuery();
            while(res.next())
            {
               
                String id=res.getString("ID");
               jComboBoxSearch.addItem(id);
               
            }
           
        }catch(SQLException e)
        {
        }
        
        ///name search
        
        try{
            String sqlSrch = "Select distinct(name) AS Name from employee_info";
         PreparedStatement   prepStm=con.prepareStatement(sqlSrch);
           ResultSet rs=prepStm.executeQuery();
            while(rs.next())
            {
               
                String name=rs.getString("Name");
               searchCombo.addItem(name);
               
            }
           
        }catch(SQLException e)
        {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButtonSearch = new javax.swing.JButton();
        jTextFieldSearch = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldempname = new javax.swing.JTextField();
        jTextFieldDesig = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxSearch = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButtonRefresh = new javax.swing.JButton();
        jButtondelete = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jTextFieldTransportperc = new javax.swing.JTextField();
        jTextFieldgrosssalary = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldHouseperc = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldhouse = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldmedical = new javax.swing.JTextField();
        jTextFieldMedicalperc = new javax.swing.JTextField();
        jTextFieldtransport = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldbsalary = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jPanel5 = new javax.swing.JPanel();
        txtReport = new javax.swing.JTextField();
        btnReport = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        searchCombo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 102));
        jLabel1.setText("Employee Management System");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder()));

        jButtonSearch.setText("Search");
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        jTextFieldSearch.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextFieldSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSearchActionPerformed(evt);
            }
        });
        jTextFieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSearchKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextFieldSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButtonSearch))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSearch)
                    .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Designation Name :");

        jTextFieldempname.setEditable(false);
        jTextFieldempname.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jTextFieldDesig.setEditable(false);
        jTextFieldDesig.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Employee ID :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Employee Name :");

        jComboBoxSearch.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBoxSearch.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select ID" }));
        jComboBoxSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextFieldempname, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldDesig, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldempname, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDesig, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButton5.setText("Exit");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButtonRefresh.setText("Add New");
        jButtonRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefreshActionPerformed(evt);
            }
        });

        jButtondelete.setText("Delete");
        jButtondelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtondeleteActionPerformed(evt);
            }
        });

        jButtonUpdate.setText("Update");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonSave.setText("Save");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButton2.setText("Edit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonRefresh)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jButtonUpdate)
                .addGap(18, 18, 18)
                .addComponent(jButtondelete)
                .addGap(18, 18, 18)
                .addComponent(jButtonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRefresh)
                    .addComponent(jButton2)
                    .addComponent(jButtondelete)
                    .addComponent(jButtonSave)
                    .addComponent(jButtonUpdate)
                    .addComponent(jButton5))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTextFieldTransportperc.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextFieldTransportperc.setText("0");
        jTextFieldTransportperc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTransportpercActionPerformed(evt);
            }
        });

        jTextFieldgrosssalary.setEditable(false);
        jTextFieldgrosssalary.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextFieldgrosssalary.setText("0");
        jTextFieldgrosssalary.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldgrosssalaryMouseClicked(evt);
            }
        });
        jTextFieldgrosssalary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldgrosssalaryActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Transport Allowance");

        jTextFieldHouseperc.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextFieldHouseperc.setText("0");
        jTextFieldHouseperc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldHousepercActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Basic Salary :");

        jTextFieldhouse.setEditable(false);
        jTextFieldhouse.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextFieldhouse.setText("0");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Medical Allowance :");

        jTextFieldmedical.setEditable(false);
        jTextFieldmedical.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextFieldmedical.setText("0");
        jTextFieldmedical.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldmedicalActionPerformed(evt);
            }
        });

        jTextFieldMedicalperc.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextFieldMedicalperc.setText("0");
        jTextFieldMedicalperc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldMedicalpercActionPerformed(evt);
            }
        });

        jTextFieldtransport.setEditable(false);
        jTextFieldtransport.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextFieldtransport.setText("0");
        jTextFieldtransport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldtransportActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("House Rent :");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Gross Salary :");

        jTextFieldbsalary.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTextFieldbsalary.setText("0");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("%");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("%");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("%");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("Payment Date");

        jDateChooser1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jTextFieldtransport, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldTransportperc))
                            .addComponent(jTextFieldgrosssalary, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jTextFieldhouse, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldHouseperc))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldbsalary, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldmedical, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldMedicalperc, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10)
                            .addComponent(jLabel12)))
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldbsalary, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldMedicalperc, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldmedical, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldhouse, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldHouseperc, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldtransport, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldTransportperc, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldgrosssalary, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnReport.setText("Report");
        btnReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportActionPerformed(evt);
            }
        });

        btnView.setText("View All");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        jButton1.setText("Report");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(txtReport, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnReport, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtReport)
                    .addComponent(btnReport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        searchCombo.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                searchComboPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                searchComboPopupMenuWillBecomeVisible(evt);
            }
        });
        searchCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(searchCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSearchActionPerformed
        
         try{
        String sqlSearch="select * from employee_info where 	id = '"+jComboBoxSearch.getSelectedItem()+"'";
            prepStmt = con.prepareStatement(sqlSearch);
            res=prepStmt.executeQuery();
            
            while(res.next())
                {
                    
                    String Name = res.getString("name");
                    String Desig = res.getString("designation");
                    
                    
                    
                   jTextFieldempname.setText(Name);
                   jTextFieldDesig.setText(Desig);
                    
            
        }
           
            
          
        }
        catch(SQLException e){
            
           
        }
        
        
        try{
            
            
            
            
            String sqlSearch = "select employee_info.id,employee_info.name,employee_info.designation,employee_salary.basic_salary,employee_salary.medical_allowance,employee_salary.medicalperc,employee_salary.house_rent,employee_salary.houseperc,employee_salary.transport_al,employee_salary.transportperc,employee_salary.gross_salary,employee_salary.Sal_Date from employee_info,employee_salary where employee_info.id=employee_salary.id AND employee_info.id = '"+jComboBoxSearch.getSelectedItem().toString()+"' ";
            
            prepStmt = con.prepareStatement(sqlSearch);
            res=prepStmt.executeQuery();
            
            while(res.next())
                {
                    
                    String Name = res.getString("employee_info.name");
                    String Deg = res.getString("employee_info.designation");
                    String BS = res.getString("employee_salary.basic_salary");
                    String MA = res.getString("employee_salary.medical_allowance");
                    String MAP = res.getString("employee_salary.medicalperc");
                    String HR = res.getString("employee_salary.house_rent");
                    String HRP=res.getString("employee_salary.houseperc");
                    String TA = res.getString("employee_salary.transport_al");
                    String TAP=res.getString("employee_salary.transportperc");
                    String GS = res.getString("employee_salary.gross_salary");
                    Date DD = res.getDate("employee_salary.Sal_Date");
                    
                    
                    
                    jTextFieldempname.setText(Name);
                    jTextFieldDesig.setText(Deg);
                    jTextFieldbsalary.setText(BS);
                    jTextFieldmedical.setText(MA);
                    jTextFieldMedicalperc.setText(MAP);
                    jTextFieldhouse.setText(HR);
                    jTextFieldHouseperc.setText(HRP);
                    jTextFieldtransport.setText(TA);
                    jTextFieldTransportperc.setText(TAP);
                    jTextFieldgrosssalary.setText(GS);
                    jDateChooser1.setDate(DD);
                    
               
        }
           
            
          
        }
        catch(SQLException e){
            
           
        }
    }//GEN-LAST:event_jComboBoxSearchActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        
        java.sql.Date Sald = new java.sql.Date(jDateChooser1.getDate().getTime());
        
        
         try{
            
            
            String sqlQry="insert into employee_salary(id,basic_salary,medical_allowance,medicalperc,house_rent,houseperc,transport_al,transportperc,gross_salary,Sal_Date) values(?,?,?,?,?,?,?,?,?,?)";
            
            prepStmt = con.prepareStatement(sqlQry);

                        prepStmt.setString(1, (String) jComboBoxSearch.getSelectedItem());
                        prepStmt.setString(2, jTextFieldbsalary.getText());
                        prepStmt.setString(3, jTextFieldmedical.getText());
                        prepStmt.setString(4, jTextFieldMedicalperc.getText());
                        prepStmt.setString(5, jTextFieldhouse.getText());
                        prepStmt.setString(6, jTextFieldHouseperc.getText());
                        prepStmt.setString(7, jTextFieldtransport.getText());
                        prepStmt.setString(8, jTextFieldTransportperc.getText());
                        prepStmt.setString(9, jTextFieldgrosssalary.getText());
                        prepStmt.setDate(10, Sald);
                        
                        
                       
                       int i= prepStmt.executeUpdate();
                       
                       if(i>0){
                           JOptionPane.showMessageDialog(this, "Saved");
                       }
            
        }catch(SQLException e){
            
        }
        
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       
        
        int msg = JOptionPane.YES_NO_OPTION;
        int result = JOptionPane.showConfirmDialog(null, "Are You Sure to Exit?","Warning",msg);
        if (result==0)
        {
        System.exit(0);
        }
        else
        {
            System.out.println(" ");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.setLocationRelativeTo(null);
    }//GEN-LAST:event_formWindowOpened

    private void jButtonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefreshActionPerformed
        jComboBoxSearch.setSelectedItem("Select ID");
        jTextFieldempname.setText(null);
        jTextFieldDesig.setText(null);
        jTextFieldbsalary.setText("0");
        jTextFieldmedical.setText("0");
        jTextFieldhouse.setText("0");
        jTextFieldtransport.setText("0");
        jTextFieldgrosssalary.setText("0");
        jTextFieldSearch.setText(null);
        jTextFieldMedicalperc.setText("0");
        jTextFieldHouseperc.setText("0");
        jTextFieldTransportperc.setText("0");
        
        jDateChooser1.setDate(now);
        
        
    }//GEN-LAST:event_jButtonRefreshActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        int msg = JOptionPane.YES_NO_OPTION;
        int result = JOptionPane.showConfirmDialog(null, "Are You Sure to Update?","Warning",msg);
        if (result==0)
        {
        
            
         java.sql.Date paytime=new java.sql.Date(jDateChooser1.getDate().getTime());
            
        try{
            
            
            
            
            String sqlQry="UPDATE employee_salary SET basic_salary= ?,medical_allowance = ?, medicalperc = ?, house_rent = ?, houseperc = ?, transport_al = ?, transportperc= ?, gross_salary = ?, Sal_Date=? WHERE id = ?";
            
            prepStmt = con.prepareStatement(sqlQry);

                        
                        prepStmt.setString(1, jTextFieldbsalary.getText());
                        prepStmt.setString(2, jTextFieldmedical.getText());
                        prepStmt.setString(3, jTextFieldMedicalperc.getText());
                        prepStmt.setString(4, jTextFieldhouse.getText());
                        prepStmt.setString(5, jTextFieldHouseperc.getText());
                        prepStmt.setString(6, jTextFieldtransport.getText());
                        prepStmt.setString(7, jTextFieldTransportperc.getText());
                        prepStmt.setString(8, jTextFieldgrosssalary.getText());
                        prepStmt.setDate(9, paytime);
                        prepStmt.setString(10, (String) jComboBoxSearch.getSelectedItem());
                        
                        
                        
                       
                       int i= prepStmt.executeUpdate();
                       
                       if(i>0){
                           JOptionPane.showMessageDialog(this, "DATABAE UPDATED");
                       }
            
        }catch(SQLException e){
            
        }
        }
        else
        {
            System.out.println(" ");
        }
        
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        
        
        int test = 1;
        
        try{
            String SearchID = jTextFieldSearch.getText();
            
            String sqlSearch="select * from employee_salary where id = '"+SearchID+"'";
            prepStmt = con.prepareStatement(sqlSearch);
            res=prepStmt.executeQuery();
            
            while(res.next())
                {
                    
                    String ID = res.getString("id");
                    String B_Salary = res.getString("basic_salary");
                    String Medical_Al = res.getString("medical_allowance");
                    String Medical_Al_PER = res.getString("medicalperc");
                     
                    String House_Rent = res.getString("house_rent");
                    String House_Rent_PER = res.getString("houseperc");
                    
                    
                    String Transpoort = res.getString("transport_al");
                    String Transpoort_PER = res.getString("transportperc");
                    
                    String Gross_Salary = res.getString("gross_salary");
                    
                    Date pay=res.getDate("Sal_Date");
                    
                    
                    
                    
                    
                    jComboBoxSearch.setSelectedItem(ID);
                    jTextFieldbsalary.setText(B_Salary);
                    jTextFieldmedical.setText(Medical_Al);
                    jTextFieldMedicalperc.setText(Medical_Al_PER);
                    
                    jTextFieldhouse.setText(House_Rent);
                    jTextFieldHouseperc.setText(House_Rent_PER);
                    
                    
                    jTextFieldtransport.setText(Transpoort);
                    jTextFieldTransportperc.setText(Transpoort_PER);
                    jTextFieldgrosssalary.setText(Gross_Salary);
                     jDateChooser1.setDate(pay);
                    
                    test=0;
                    JOptionPane.showMessageDialog(this, "Weldone"+"\n"+"Searching Completed");
                    
                    break;
            
        }
           
            
          if(test==1){
                JOptionPane.showMessageDialog(this, "Error Occurred!!!"+"\n"+"\n"+"Data Not Found"+"\n"+"Please Try Again Later");
            }  
            
        }
        catch(SQLException e){
            
           
        }
        
        
        
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextFieldSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSearchActionPerformed
        
        
        int test = 1;
        
        try{
            String SearchID = jTextFieldSearch.getText();
            
            String sqlSearch="select * from employee_salary where id = '"+SearchID+"'";
            prepStmt = con.prepareStatement(sqlSearch);
            res=prepStmt.executeQuery();
            
            while(res.next())
                {
                    
                    String ID = res.getString("id");
                    String B_Salary = res.getString("basic_salary");
                    String Medical_Al = res.getString("medical_allowance");
                    String Medical_Al_PER = res.getString("medicalperc");
                     
                    String House_Rent = res.getString("house_rent");
                    String House_Rent_PER = res.getString("houseperc");
                    
                    
                    String Transpoort = res.getString("transport_al");
                    String Transpoort_PER = res.getString("transportperc");
                    
                    String Gross_Salary = res.getString("gross_salary");
                    
                    Date pay=res.getDate("Sal_Date");
                    
                    
                    
                    
                    
                    jComboBoxSearch.setSelectedItem(ID);
                    jTextFieldbsalary.setText(B_Salary);
                    jTextFieldmedical.setText(Medical_Al);
                    jTextFieldMedicalperc.setText(Medical_Al_PER);
                    
                    jTextFieldhouse.setText(House_Rent);
                    jTextFieldHouseperc.setText(House_Rent_PER);
                    
                    
                    jTextFieldtransport.setText(Transpoort);
                    jTextFieldTransportperc.setText(Transpoort_PER);
                    jTextFieldgrosssalary.setText(Gross_Salary);
                     jDateChooser1.setDate(pay);
                    
                    test=0;
                    JOptionPane.showMessageDialog(this, "Weldone"+"\n"+"Searching Completed");
                    
                    break;
            
        }
           
            
          if(test==1){
                JOptionPane.showMessageDialog(this, "Error Occurred!!!"+"\n"+"\n"+"Data Not Found"+"\n"+"Please Try Again Later");
            }  
            
        }
        catch(SQLException e){
            
           
        }
    }//GEN-LAST:event_jTextFieldSearchActionPerformed

    private void jButtondeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtondeleteActionPerformed
        
        int msg=JOptionPane.YES_NO_OPTION;
        
        
       int result= JOptionPane.showConfirmDialog(this, "Are You Sure to Delete?","Warning",msg);
        if(result==0){
            System.out.println("Yes Option");
        try{
            String sqlQry="DELETE from employee_salary WHERE id= ?";
            
             prepStmt = con.prepareStatement(sqlQry);
            
            prepStmt.setString(1, (String) jComboBoxSearch.getSelectedItem());
                       
                       int i= prepStmt.executeUpdate();
                       
                       if(i>0){
                           JOptionPane.showMessageDialog(this, "RECORD DELETED");
                       }
            
        }catch(SQLException | HeadlessException e)
        {
            
        }
        
        jComboBoxSearch.setSelectedItem("Select ID");
        jTextFieldempname.setText(null);
        jTextFieldDesig.setText(null);
        jTextFieldbsalary.setText(null);
        jTextFieldmedical.setText(null);
        jTextFieldhouse.setText(null);
        jTextFieldtransport.setText(null);
        jTextFieldgrosssalary.setText(null);
        jTextFieldSearch.setText(null);
        
       
        }else{
           System.out.println("No Option");
        }
       
        
        
    }//GEN-LAST:event_jButtondeleteActionPerformed

    private void jTextFieldtransportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldtransportActionPerformed
       
        try{
            
     
        double grosssalary=Double.parseDouble(jTextFieldbsalary.getText())+Double.parseDouble(jTextFieldmedical.getText())+Double.parseDouble(jTextFieldhouse.getText())+Double.parseDouble(jTextFieldtransport.getText());
        String total=Double.toString(grosssalary);
        
        jTextFieldgrosssalary.setText(total);
        }catch(Exception e)
        {
            System.out.println("Error==>"+e);
        }
    }//GEN-LAST:event_jTextFieldtransportActionPerformed

    private void jTextFieldgrosssalaryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldgrosssalaryMouseClicked
        double grosssalary=Double.parseDouble(jTextFieldbsalary.getText())+Double.parseDouble(jTextFieldmedical.getText())+Double.parseDouble(jTextFieldhouse.getText())+Double.parseDouble(jTextFieldtransport.getText());
        String total=Double.toString(grosssalary);
        
        jTextFieldgrosssalary.setText(total);
        
        
    }//GEN-LAST:event_jTextFieldgrosssalaryMouseClicked

    private void jTextFieldMedicalpercActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldMedicalpercActionPerformed
        try{
            
            
        double medical = Double.parseDouble(jTextFieldMedicalperc.getText());
        double basicsalary=Double.parseDouble(jTextFieldbsalary.getText());
        double all = (basicsalary*medical/100);
        String mediall=Double.toString(all);
        jTextFieldmedical.setText(mediall);
        
        double grosssalary=Double.parseDouble(jTextFieldbsalary.getText())+Double.parseDouble(jTextFieldmedical.getText())+Double.parseDouble(jTextFieldhouse.getText())+Double.parseDouble(jTextFieldtransport.getText());
        String total=Double.toString(grosssalary);
        
        jTextFieldgrosssalary.setText(total);
        
        
        
        }catch(Exception e)
        {
            System.out.println("Error ==> "+e);
        }
    }//GEN-LAST:event_jTextFieldMedicalpercActionPerformed

    private void jTextFieldHousepercActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldHousepercActionPerformed
        try{
        double medical = Double.parseDouble(jTextFieldHouseperc.getText());
        double basicsalary=Double.parseDouble(jTextFieldbsalary.getText());
        double all = (basicsalary*medical/100);
        String mediall=Double.toString(all);
        jTextFieldhouse.setText(mediall);
        
        
        double grosssalary=Double.parseDouble(jTextFieldbsalary.getText())+Double.parseDouble(jTextFieldmedical.getText())+Double.parseDouble(jTextFieldhouse.getText())+Double.parseDouble(jTextFieldtransport.getText());
        String total=Double.toString(grosssalary);
        
        jTextFieldgrosssalary.setText(total);
        
        }catch(Exception e)
        {
            System.out.println("Error ==> "+e);
        }
    }//GEN-LAST:event_jTextFieldHousepercActionPerformed

    private void jTextFieldTransportpercActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTransportpercActionPerformed
       try{
        double medical = Double.parseDouble(jTextFieldTransportperc.getText());
        double basicsalary=Double.parseDouble(jTextFieldbsalary.getText());
        double all = (basicsalary*medical/100);
        String mediall=Double.toString(all);
        jTextFieldtransport.setText(mediall);
        
        
        double grosssalary=Double.parseDouble(jTextFieldbsalary.getText())+Double.parseDouble(jTextFieldmedical.getText())+Double.parseDouble(jTextFieldhouse.getText())+Double.parseDouble(jTextFieldtransport.getText());
        String total=Double.toString(grosssalary);
        
        jTextFieldgrosssalary.setText(total);
        
       }catch(Exception e)
       {
           System.out.println("Error : "+e);
       }
        
        
    }//GEN-LAST:event_jTextFieldTransportpercActionPerformed

    private void jTextFieldmedicalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldmedicalActionPerformed
        
    }//GEN-LAST:event_jTextFieldmedicalActionPerformed

    private void jTextFieldgrosssalaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldgrosssalaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldgrosssalaryActionPerformed

    private void btnReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportActionPerformed
        
        
        try {
            // 
            print_emp_Salary_Inforeport();
            
       } catch (BadElementException | IOException ex) {
           
        } catch (SQLException ex) {
            Logger.getLogger(Emp_Salary.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (Desktop.isDesktopSupported()) {
            try {
                File myfile = new File("EmplyeeSalaryInfo.pdf");

                Desktop.getDesktop().open(myfile);
            } catch (IOException e17) {
                // JOptionPane.showMessageDialog(null, e17.toString());
            }
        }
        
        
    
   
    }//GEN-LAST:event_btnReportActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
       try {
            // 
            print_emp_Salary_List_Inforeport();
            
       } catch (BadElementException | IOException ex) {
           
        } catch (SQLException ex) {
            Logger.getLogger(Emp_Salary.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (Desktop.isDesktopSupported()) {
            try {
                File myfile = new File("EmplyeeSalaryListInfo.pdf");

                Desktop.getDesktop().open(myfile);
            } catch (IOException e17) {
                // JOptionPane.showMessageDialog(null, e17.toString());
            }
        }
    }                                       
/////////////////////////////////////////
    
    
    void print_emp_Salary_Inforeport() throws SQLException, BadElementException, IOException {
        // con = Connect.ConnectDB();
        Document document = new Document(PageSize.A4.rotate());
       // Document document = new Document(PageSize.A4);
        Font ff1 = new Font(Font.BOLD, 13);
        ff1.setStyle(Font.UNDERLINE);
        ff1.setColor(Color.BLACK);
        ff1.setStyle(Font.BOLD);
        
        Font ff5 = new Font(Font.BOLD, 18);
        ff5.setStyle(Font.UNDERLINE);
        ff5.setColor(Color.BLACK);
        ff5.setStyle(Font.BOLD);
        Font ff3 = new Font(Font.NORMAL, 11);
        ff3.setStyle(Font.COURIER);
        ff3.setColor(Color.BLACK);
        Font ff4 = new Font(Font.BOLD, 10);
        ff4.setStyle(Font.NORMAL);
        ff4.setColor(Color.BLACK);

        

        Paragraph paragraph3 = new Paragraph("\n");         
        paragraph3.setAlignment(Element.ALIGN_CENTER);
       

        try {

            PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("EmplyeeSalaryInfo.pdf"));

            document.open();

            PdfContentByte cb = writer.getDirectContent();
            

           
            
            
            PdfPTable table = new PdfPTable(2);

            PdfPCell cell5 = new PdfPCell();

           
            String ID="",Name="",Deg="",BS="",MA="",HR="",TA="",GS="";

            try {

            //String Rsearch=txtReport.getText();
            
            String sqlSearch = "select employee_info.id,employee_info.name,employee_info.designation,employee_salary.basic_salary,employee_salary.medical_allowance,employee_salary.medicalperc,employee_salary.house_rent,employee_salary.houseperc,employee_salary.transport_al,employee_salary.transportperc,employee_salary.gross_salary from employee_info,employee_salary where employee_info.id=employee_salary.id";
            
            prepStmt = con.prepareStatement(sqlSearch);
            res=prepStmt.executeQuery();
            
            while(res.next())
                {
                    ID=res.getString("id");
                    Name = res.getString("employee_info.name");
                    Deg = res.getString("employee_info.designation");
                    BS = res.getString("employee_salary.basic_salary");
                    MA = res.getString("employee_salary.medical_allowance");
                    
                    HR = res.getString("employee_salary.house_rent");
                    
                    TA = res.getString("employee_salary.transport_al");
                    
                    GS = res.getString("employee_salary.gross_salary");
                    
               
             
                
               
                
            }
            }catch(SQLException e){
            }
            
           
            Paragraph mainparagraph = new Paragraph("Employee Salary Info", new Font(Font.BOLD, 15, Font.BOLD));
            mainparagraph.setAlignment(Element.ALIGN_CENTER);
            
            

     
            
            PdfPTable my_report_table1 = new PdfPTable(2);
            
            //left side
            PdfPCell table_cell1 = new PdfPCell();
            my_report_table1.setWidthPercentage(100);

            table_cell1 = new PdfPCell(new Phrase("Employee ID : " + ID, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell1.setHorizontalAlignment(Element.ALIGN_LEFT);
            // table_cell1.setBorder(1);
            

            table_cell1.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table1.addCell(table_cell1);

            //right side
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MMM-yyyy hh:mm:ss a");
            java.util.Date printDate = new java.util.Date();
            dateFormat.format(printDate);
           
            table_cell1 = new PdfPCell(new Phrase("Print Date & Time :  " + dateFormat.format(printDate), new Font(Font.NORMAL, 11, Font.BOLD)));
            table_cell1.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //table_cell6.setBorder(Rectangle.NO_BORDER);
            
            table_cell1.setBorder(Rectangle.NO_BORDER);
            my_report_table1.addCell(table_cell1);
            
            
            //////Name
            
             //left side
            PdfPCell table_cell10 = new PdfPCell();
            my_report_table1.setWidthPercentage(100);

            table_cell10 = new PdfPCell(new Phrase("Name : " +Name, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell10.setHorizontalAlignment(Element.ALIGN_LEFT);
            // table_cell1.setBorder(1);
            

            table_cell10.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table1.addCell(table_cell10);

            //right side

            table_cell10 = new PdfPCell(new Phrase("Designation : " +Deg, new Font(Font.NORMAL, 15, Font.BOLD)));
            //table_cell10.setHorizontalAlignment(Element.ALIGN_LEFT);
            

            table_cell10.setBorder(Rectangle.NO_BORDER);
            my_report_table1.addCell(table_cell10);
            
            //////

            PdfPTable my_report_table2 = new PdfPTable(2);
            PdfPCell table_cell2 = new PdfPCell();

            table_cell2 = new PdfPCell(new Phrase("\n Basic Salary : " + BS + "\n\n", new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_LEFT);
            //table_cell2.setBorder(Rectangle.NO_BORDER);
            table_cell2.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);

            table_cell2 = new PdfPCell(new Phrase("\n MA : " + MA + "\n\n", new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_LEFT);
            // table_cell2.setBorder(Rectangle.NO_BORDER);
            table_cell2.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            

            PdfPTable my_report_table5 = new PdfPTable(2);
            PdfPCell table_cell5 = new PdfPCell();

            table_cell5 = new PdfPCell(new Phrase("\n House Rent : " + HR + "\n\n", new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell5.setHorizontalAlignment(Element.ALIGN_LEFT);
            //table_cell5.setBorder(Rectangle.NO_BORDER);
            table_cell2.setBorder(Rectangle.BOX);
            my_report_table5.addCell(table_cell5);

            table_cell5 = new PdfPCell(new Phrase("\n Transport : " + TA + "\n\n", new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell5.setHorizontalAlignment(Element.ALIGN_LEFT);
            //table_cell5.setBorder(Rectangle.NO_BORDER);
            table_cell2.setBorder(Rectangle.BOX);
            my_report_table5.addCell(table_cell5);

            PdfPTable my_report_table6 = new PdfPTable(2);
            PdfPCell table_cell6 = new PdfPCell();

            table_cell6 = new PdfPCell(new Phrase("\n Total Salary : " + GS + "\n\n", new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell6.setHorizontalAlignment(Element.ALIGN_LEFT);
            //table_cell6.setBorder(Rectangle.NO_BORDER);
            table_cell2.setBorder(Rectangle.BOX);
            my_report_table6.addCell(table_cell6);

            table_cell6 = new PdfPCell(new Phrase("\n\n", new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell6.setHorizontalAlignment(Element.ALIGN_LEFT);
            //table_cell6.setBorder(Rectangle.NO_BORDER);
            table_cell2.setBorder(Rectangle.BOX);
            my_report_table6.addCell(table_cell6);

           

            document.add(mainparagraph);
            document.add(paragraph3);
            document.add(my_report_table1);
            document.add(paragraph3);
            document.add(paragraph3);
            document.add(my_report_table2);
            document.add(paragraph3);
            document.add(my_report_table5);
            document.add(paragraph3);
            document.add(my_report_table6);
           

            // document.add(table);
        } catch (DocumentException | HeadlessException e56) {
            System.err.println(e56.getMessage());
        }

        document.close();
    }
    
    
    
    
     void print_emp_Salary_List_Inforeport() throws SQLException, BadElementException, IOException {
        // con = Connect.ConnectDB();
        Document document = new Document(PageSize.A4.rotate());
       // Document document = new Document(PageSize.A4);
        Font ff1 = new Font(Font.BOLD, 13);
        ff1.setStyle(Font.UNDERLINE);
        ff1.setColor(Color.BLACK);
        ff1.setStyle(Font.BOLD);
        
        Font ff5 = new Font(Font.BOLD, 18);
        ff5.setStyle(Font.UNDERLINE);
        ff5.setColor(Color.BLACK);
        ff5.setStyle(Font.BOLD);
        Font ff3 = new Font(Font.NORMAL, 11);
        ff3.setStyle(Font.COURIER);
        ff3.setColor(Color.BLACK);
        Font ff4 = new Font(Font.BOLD, 10);
        ff4.setStyle(Font.NORMAL);
        ff4.setColor(Color.BLACK);

        

        Paragraph paragraph3 = new Paragraph("\n");         
        paragraph3.setAlignment(Element.ALIGN_CENTER);
       

        try {

            PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("EmplyeeSalaryListInfo.pdf"));

            document.open();

            PdfContentByte cb = writer.getDirectContent();

            PdfPTable table = new PdfPTable(2);

            PdfPCell cell5 = new PdfPCell();

            String ID="",Name="",BS="",MA="",HR="",TA="",GS="";

          
            
            ///////Name
          
             try{
            
            
            
            String sqlSearch = "select employee_info.id,employee_info.name,employee_salary.basic_salary,employee_salary.medical_allowance,employee_salary.medicalperc,employee_salary.house_rent,employee_salary.houseperc,employee_salary.transport_al,employee_salary.transportperc,employee_salary.gross_salary from employee_info,employee_salary where employee_info.id=employee_salary.id";
            
            prepStmt = con.prepareStatement(sqlSearch);
            res=prepStmt.executeQuery();
            
            while(res.next())
                {
                    ID=res.getString("id");
                    Name = res.getString("employee_info.name");
                    BS = res.getString("employee_salary.basic_salary");
                    MA = res.getString("employee_salary.medical_allowance");
                    
                    HR = res.getString("employee_salary.house_rent");
                    
                    TA = res.getString("employee_salary.transport_al");
                    
                    GS = res.getString("employee_salary.gross_salary");
                    
               
             
              
            }
            jDateChooser1.setDate(now);
            
            
        }catch(Exception e)
        {
            System.out.println("Error ==> "+e);
        }

            Paragraph mainparagraph = new Paragraph("Employee Salary Full Information", new Font(Font.BOLD, 15, Font.BOLD));
            mainparagraph.setAlignment(Element.ALIGN_CENTER);
            
            

     
            
            PdfPTable my_report_table1 = new PdfPTable(2);
            
            //left side
            PdfPCell table_cell1 = new PdfPCell();
            my_report_table1.setWidthPercentage(100);

            table_cell1 = new PdfPCell(new Phrase(" ", new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell1.setHorizontalAlignment(Element.ALIGN_LEFT);
            // table_cell1.setBorder(1);
            

            table_cell1.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table1.addCell(table_cell1);

            //right side
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MMM-yyyy hh:mm:ss a");
            java.util.Date printDate = new java.util.Date();
            dateFormat.format(printDate);
           
            table_cell1 = new PdfPCell(new Phrase("Print Date & Time :  " + dateFormat.format(printDate), new Font(Font.NORMAL, 11, Font.BOLD)));
            table_cell1.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //table_cell6.setBorder(Rectangle.NO_BORDER);
            
            table_cell1.setBorder(Rectangle.NO_BORDER);
            my_report_table1.addCell(table_cell1);
                                 

            //TABLE HEADER
            PdfPTable my_report_table = new PdfPTable(7);
            float[] columnWidths = {0.5f,0.8f,0.8f,0.8f,0.8f,0.8f,0.8f};
            my_report_table.setWidths(columnWidths);
            my_report_table.setWidthPercentage(100);
            String[] headers1 = new String[]{
                "Emp ID","Emp Name","Basic Salary", "MA", "HR","TA","Gross Salary"
            };

            PdfPTable table1 = new PdfPTable(headers1.length);
            table1.setWidths(columnWidths);
            table1.setWidthPercentage(100);
            for (String header : headers1) {
                PdfPCell cell = new PdfPCell();

                cell.setGrayFill(0.9f);
                cell.setPhrase(new Phrase(header, new Font(Font.NORMAL, 15, Font.BOLD)));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table1.addCell(cell);
            }
            table1.completeRow();
            
            ////END OF HEADER
            
            ///////////////
            
            PdfPTable my_report_table2 = new PdfPTable(7);
            
            //left side
            PdfPCell table_cell2 = new PdfPCell();
            my_report_table2.setWidthPercentage(100);         
            my_report_table2.setWidths(columnWidths);

            
            ///////////////////
            
              try {

            
            //String sqlQry="Select * from emp_info ORDER BY Emp_ID ASC";
           String sqlSearch = "select employee_info.id,employee_info.name,employee_salary.basic_salary,employee_salary.medical_allowance,employee_salary.medicalperc,employee_salary.house_rent,employee_salary.houseperc,employee_salary.transport_al,employee_salary.transportperc,employee_salary.gross_salary from employee_info,employee_salary where employee_info.id=employee_salary.id ORDER BY id ASC";

            prepStmt = con.prepareStatement(sqlSearch);
            res=prepStmt.executeQuery();
            
            while(res.next())
            {
                
            ID=res.getString("id");  
            table_cell2 = new PdfPCell(new Phrase(ID, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            Name = res.getString("employee_info.name");
             table_cell2 = new PdfPCell(new Phrase(Name, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            BS = res.getString("employee_salary.basic_salary");
             table_cell2 = new PdfPCell(new Phrase(BS, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            MA = res.getString("employee_salary.medical_allowance");
            table_cell2 = new PdfPCell(new Phrase(MA, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            
            HR = res.getString("employee_salary.house_rent");
            table_cell2 = new PdfPCell(new Phrase(HR, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            TA = res.getString("employee_salary.transport_al");
            table_cell2 = new PdfPCell(new Phrase(TA, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
            
            
            GS = res.getString("employee_salary.gross_salary");
            table_cell2 = new PdfPCell(new Phrase(GS, new Font(Font.NORMAL, 15, Font.BOLD)));
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            // table_cell1.setBorder(1);           
           // table_cell2.setBorder(Rectangle.NO_BORDER);
            //table_cell1.setBorder(Rectangle.BOX);
            my_report_table2.addCell(table_cell2);
             
                
               
                
            }
            }catch(Exception e){
            }
           

           ///////////////

            document.add(mainparagraph);
            document.add(paragraph3);
            document.add(my_report_table1);
           
            document.add(paragraph3);
            document.add(table1);
            document.add(my_report_table2);
            
            
           

            // document.add(table);
        } catch (DocumentException | HeadlessException e56) {
            System.err.println(e56.getMessage());
        }

        document.close(); 
    }//GEN-LAST:event_btnViewActionPerformed

    private void searchComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchComboActionPerformed
        try{
        String sqlSearch="select * from employee_info where name = '"+searchCombo.getSelectedItem()+"'";
            prepStmt = con.prepareStatement(sqlSearch);
            res=prepStmt.executeQuery();
            
            while(res.next())
                {
                    
                    String Name = res.getString("name");
                    //String Desig = res.getString("designation");
                    
                    
                    // String Name = res.getString("name");
                    String Desig = res.getString("designation");
                    
                    
                    
                   jTextFieldempname.setText(Name);
                   jTextFieldDesig.setText(Desig);
                    
            
        }
           
            
          
        }
        catch(SQLException e){
            
           
        }
    }//GEN-LAST:event_searchComboActionPerformed

    private void searchComboPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_searchComboPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        
           try{
        String sqlSearch="select * from employee_info where name = '"+searchCombo.getSelectedItem()+"'";
            prepStmt = con.prepareStatement(sqlSearch);
            res=prepStmt.executeQuery();
            
            while(res.next())
                {
                    
                    String Name = res.getString("name");
                    //String Desig = res.getString("designation");
                    
                    
                    // String Name = res.getString("name");
                    String Desig = res.getString("designation");
                    
                    
                    
                   jTextFieldempname.setText(Name);
                   jTextFieldDesig.setText(Desig);
                    
            
        }
           
            
          
        }
        catch(SQLException e){
            
           
        }
    }//GEN-LAST:event_searchComboPopupMenuWillBecomeInvisible

    private void jTextFieldSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchKeyReleased
        
    }//GEN-LAST:event_jTextFieldSearchKeyReleased

    private void searchComboPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_searchComboPopupMenuWillBecomeVisible
        
    }//GEN-LAST:event_searchComboPopupMenuWillBecomeVisible

    public void print() throws IOException {
    FileInputStream in = new FileInputStream("EmplyeeSalaryInfo.pdf");
    Doc doc = new SimpleDoc(in, DocFlavor.INPUT_STREAM.AUTOSENSE, null);
    PrintService service = PrintServiceLookup.lookupDefaultPrintService();

    try {
        service.createPrintJob().print(doc, null);
    } catch (PrintException e) {
        e.printStackTrace();
    }
}
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        try{
            print();
        
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Emp_Salary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Emp_Salary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Emp_Salary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Emp_Salary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Emp_Salary().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReport;
    private javax.swing.JButton btnView;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButtonRefresh;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JButton jButtondelete;
    private javax.swing.JComboBox jComboBoxSearch;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTextField jTextFieldDesig;
    private javax.swing.JTextField jTextFieldHouseperc;
    private javax.swing.JTextField jTextFieldMedicalperc;
    private javax.swing.JTextField jTextFieldSearch;
    private javax.swing.JTextField jTextFieldTransportperc;
    private javax.swing.JTextField jTextFieldbsalary;
    private javax.swing.JTextField jTextFieldempname;
    private javax.swing.JTextField jTextFieldgrosssalary;
    private javax.swing.JTextField jTextFieldhouse;
    private javax.swing.JTextField jTextFieldmedical;
    private javax.swing.JTextField jTextFieldtransport;
    private javax.swing.JComboBox<String> searchCombo;
    private javax.swing.JTextField txtReport;
    // End of variables declaration//GEN-END:variables
}
